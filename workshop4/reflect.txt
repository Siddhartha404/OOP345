//Name: Siddhartha Thapa Chhetri
//Email: sthapa-chhetri2@myseneca.ca
//ID: 147913222
//I declare that this submission is the result of my own work and I only copied the code that my professor provided to complete my workshops and assignments. This submitted piece of work has not been shared with any other student or 3rd party content provider.

In this workshop, I enhanced my understanding of object-oriented programming concepts such as composition, aggregation, and association. Composition is illustrated in the `Restaurant` class, where it manages the lifetime of `Reservation` objects through dynamic allocation. Aggregation is shown in the `ConfirmationSender` class, which holds pointers to `Reservation` objects without owning them. Implementing move and copy semantics was challenging but crucial for proper resource management. In composition, deep copying in the `Restaurant` class ensures each instance has its own `Reservation` copies, while move semantics transfer ownership efficiently. In aggregation, `ConfirmationSender` simply copies or moves pointers. I also dealt with dynamically resizing arrays in `ConfirmationSender`, addressing challenges by correctly managing memory and avoiding leaks. This workshop solidified my understanding of the rule of three/five and the differences between managing resources in composition and aggregation, ensuring robust and efficient code.

